
* Gstreamer 

** Examples

*** Sample commands
#+begin_src bash
gst-launch -v videotestsrc ! queue ! ffenc_mpeg4 bitrate=800000 ! rtpmp4vpay ! tcpserversink host=<PC_ip> port=5000
#+end_src

*** Web Cam test
#+begin_src bash
gst-launch-1.0 v4l2src ! jpegdec ! xvimagesink
#+end_src

*** Video with RTSP 
#+begin_src bash

#+end_src

** Getting Started

*** How do you find devices for gstreamer
:QUESTIONS:

:END:
:PROPERTIES:

:END:




gst-device-monitor-1.0

*** Generate the pipeline output
#+begin_src bash
export GST_DEBUG_DUMP_DOT_DIR=/tmp/
gst-launch-1.0 audiotestsrc num-buffers=1000 ! fakesink sync=false
#+end_src

This will generate dot files in //tmp/

Reference 

[[https://developer.ridgerun.com/wiki/index.php/How_to_generate_a_Gstreamer_pipeline_diagram_%28graph%29][Generating a pipeline Dot image for Gstreamer]]

*** Inspecting the pipeline

Basic test
#+begin_src bash
gst-launch-1.0 videotestsrc ! ximagesink
#+end_src
** Gstreamer Complex
** Gstreamer commands 
#+begin_src bash
gst-launch-1.0 imxv4l2videosrc fps=30000/1001 num-buffers=1 \ 
! video/x-raw,format=UYVY,width=720,height=480,framerate=30000/1001,interlace-mode=interleaved,device-mode=interleaved \
! vbiread \
    name=vbi_read \
    line-dup-enabled=true \
    line-dup-top-start=3 line-dup-top-stop=33 \
    line-dup-bot-start=433 line-dup-bot-stop=480 \
    first-top-data-line=3 num-top-data-lines=30 \
    first-bot-data-line=433 num-bot-data-lines=37 \
    parse-audio-packets=true \
    set-tff-flag=true \
! imxipuvideotransform deinterlace=true \
! filesink location=/home/root/capture_720x480.uyvy
#+end_src

** RTSP support

*** Build the RTSP Server
#+begin_src bash
git clone git://anongit.freedesktop.org/gstreamer/gst-rtsp-server && cd gst-rtsp-server
git checkout remotes/origin/1.2
./autogen.sh --noconfigure && GST_PLUGINS_GOOD_DIR=$(pkg-config --variable=pluginsdir gstreamer-plugins-bad-1.0) ./configure && make
#+end_src

Notes

- GST_PLUGINS_GOOD_DIR is not set

**** Testing
#+begin_src 
cd examples && ./test-launch "( videotestsrc ! x264enc ! rtph264pay name=pay0 pt=96 )"
#+end_src

**** 

** 4k tv support

- [[https://forums.developer.nvidia.com/t/stream-4k-webcam-gstreamer/108025][Link to 4k nvidia Streaming]]
- 

* References 

- [[https://stackoverflow.com/questions/13744560/using-gstreamer-to-serve-rtsp-stream-working-example-sought][Stack Exchange and Using gstreamer to server RTSP stream]]

